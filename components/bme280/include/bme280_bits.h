/**
  **********************************************************************************************************************
  * @file    bme280_bits.h
  * @brief   This file is the header file for BME280 sensor data bits and needed configuration parameters
  * @authors patrykmonarcha
  * @date Dec 2, 2024
  **********************************************************************************************************************
  */

/* Define to prevent recursive inclusion -----------------------------------------------------------------------------*/
#ifndef _BME280_BITS_H_
#define _BME280_BITS_H_

#ifndef _BME280_DRIVER_H_
#error Do not include "bme280_bits.h". Include "bme280_driver.h".
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Includes -------------------------------------------------------------------------------------------------*/

/* Types ----------------------------------------------------------------------------------------------------*/
typedef enum bme280_temperature_sampling_t {
    BME280_TEMPERATURE_OVERSAMPLING_NONE = 0x0,
    BME280_TEMPERATURE_OVERSAMPLING_X1,
    BME280_TEMPERATURE_OVERSAMPLING_X2,
    BME280_TEMPERATURE_OVERSAMPLING_X4,
    BME280_TEMPERATURE_OVERSAMPLING_X8,
    BME280_TEMPERATURE_OVERSAMPLING_X16,
} bme280_temperature_sampling_t;

typedef enum bme280_pressure_sampling_t {
    BME280_PRESSURE_OVERSAMPLING_NONE = 0x0,
    BME280_PRESSURE_OVERSAMPLING_X1,
    BME280_PRESSURE_OVERSAMPLING_X2,
    BME280_PRESSURE_OVERSAMPLING_X4,
    BME280_PRESSURE_OVERSAMPLING_X8,
    BME280_PRESSURE_OVERSAMPLING_X16,
} bme280_pressure_sampling_t;

typedef enum bme280_humidity_sampling_t {
    BME280_HUMIDITY_OVERSAMPLING_NONE = 0x0,
    BME280_HUMIDITY_OVERSAMPLING_X1,
    BME280_HUMIDITY_OVERSAMPLING_X2,
    BME280_HUMIDITY_OVERSAMPLING_X4,
    BME280_HUMIDITY_OVERSAMPLING_X8,
    BME280_HUMIDITY_OVERSAMPLING_X16,
} bme280_humidity_sampling_t;

typedef enum bme280_standby_t {
    BME280_STANDBY_0M5 = 0x0,
    BME280_STANDBY_62M5,
    BME280_STANDBY_125M,
    BME280_STANDBY_250M,
    BME280_STANDBY_500M,
    BME280_STANDBY_1000M,
    BME280_STANDBY_10M,
    BME280_STANDBY_20M,
    BMP280_STANDBY_2000M = BME280_STANDBY_10M,
    BMP280_STANDBY_4000M = BME280_STANDBY_20M,
} bme280_standby_t;

typedef enum bme280_iir_filter_t {
    BME280_IIR_NONE = 0x0,
    BME280_IIR_X1,
    BME280_IIR_X2,
    BME280_IIR_X4,
    BME280_IIR_X8,
    BME280_IIR_X16,
} bme280_iir_filter_t;

typedef enum bme280_mode_t {
    BME280_MODE_SLEEP = 0,
    BME280_MODE_FORCE = 1,
    BME280_MODE_CYCLE = 3,
} bme280_mode_t;

typedef struct bme280_config_t {
    bme280_temperature_sampling_t temperature_sampling;
    bme280_pressure_sampling_t pressure_sampling;
    bme280_humidity_sampling_t humidity_sampling;
    bme280_standby_t standby;
    bme280_iir_filter_t iir_filter;
} bme280_config_t;

/* Constants ------------------------------------------------------------------------------------------------*/
#if (CONFIG_BME280_DEFAULT_TEMPERATURE_OVERSAMPLING_NONE)
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_NONE
#elif (CONFIG_BME280_DEFAULT_TEMPERATURE_OVERSAMPLING_X1)
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_X1
#elif (CONFIG_BME280_DEFAULT_TEMPERATURE_OVERSAMPLING_X2)
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_X2
#elif (CONFIG_BME280_DEFAULT_TEMPERATURE_OVERSAMPLING_X4)
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_X4
#elif (CONFIG_BME280_DEFAULT_TEMPERATURE_OVERSAMPLING_X8)
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_X8
#else
#define BME280_DEFAULT_TEMPERATURE_OVERSAMPLING BME280_TEMPERATURE_OVERSAMPLING_X16
#endif

#if CONFIG_BME280_DEFAULT_PRESSURE_OVERSAMPLING_NONE
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_NONE
#elif CONFIG_BME280_DEFAULT_PRESSURE_OVERSAMPLING_X1
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_X1
#elif CONFIG_BME280_DEFAULT_PRESSURE_OVERSAMPLING_X2
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_X2
#elif CONFIG_BME280_DEFAULT_PRESSURE_OVERSAMPLING_X4
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_X4
#elif CONFIG_BME280_DEFAULT_PRESSURE_OVERSAMPLING_X8
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_X8
#else
#define BME280_DEFAULT_PRESSURE_OVERSAMPLING BME280_PRESSURE_OVERSAMPLING_X16
#endif

#if (CONFIG_BME280_DEFAULT_STANDBY_0M5)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_0M5
#elif (CONFIG_BME280_DEFAULT_STANDBY_62M5)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_62M5
#elif (CONFIG_BME280_DEFAULT_STANDBY_125M)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_125M
#elif (CONFIG_BME280_DEFAULT_STANDBY_250M)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_250M
#elif (CONFIG_BME280_DEFAULT_STANDBY_500M)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_500M
#elif (CONFIG_BME280_DEFAULT_STANDBY_1000M)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_1000M
#elif (CONFIG_BME280_DEFAULT_STANDBY_10M)
#define BME280_DEFAULT_STANDBY BME280_STANDBY_10M
#else
#define BME280_DEFAULT_STANDBY BME280_STANDBY_20M
#endif

#if (CONFIG_BME280_DEFAULT_IIR_NONE)
#define BME280_DEFAULT_IIR BME280_IIR_NONE
#elif (CONFIG_BME280_DEFAULT_IIR_X2)
#define BME280_DEFAULT_IIR BME280_IIR_X2
#elif (CONFIG_BME280_DEFAULT_IIR_X4)
#define BME280_DEFAULT_IIR BME280_IIR_X4
#elif (CONFIG_BME280_DEFAULT_IIR_X8)
#define BME280_DEFAULT_IIR BME280_IIR_X8
#else
#define BME280_DEFAULT_IIR BME280_IIR_X16
#endif

#if (CONFIG_BME280_DEFAULT_HUMIDITY_OVERSAMPLING_NONE)
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_NONE
#elif (CONFIG_BME280_DEFAULT_HUMIDITY_OVERSAMPLING_X1)
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_X1
#elif (CONFIG_BME280_DEFAULT_HUMIDITY_OVERSAMPLING_X2)
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_X2
#elif (CONFIG_BME280_DEFAULT_HUMIDITY_OVERSAMPLING_X4)
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_X4
#elif (CONFIG_BME280_DEFAULT_HUMIDITY_OVERSAMPLING_X8)
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_X8
#else
#define BME280_DEFAULT_HUMIDITY_OVERSAMPLING BME280_HUMIDITY_OVERSAMPLING_X16
#endif

#define BME280_DEFAULT_CONFIG ((bme280_config_t) { BME280_DEFAULT_TEMPERATURE_OVERSAMPLING, BME280_DEFAULT_PRESSURE_OVERSAMPLING, BME280_DEFAULT_STANDBY, BME280_DEFAULT_IIR, BME280_DEFAULT_HUMIDITY_OVERSAMPLING })

/* Macros ---------------------------------------------------------------------------------------------------*/

/* Variables ------------------------------------------------------------------------------------------------*/

/* Functions ------------------------------------------------------------------------------------------------*/

#ifdef __cplusplus
}
#endif

#endif // _BME280_BITS_H_

/* END OF FILE -------------------------------------------------------------------------------------------------------*/
